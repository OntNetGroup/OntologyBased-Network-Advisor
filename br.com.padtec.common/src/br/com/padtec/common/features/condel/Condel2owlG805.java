package br.com.padtec.common.features.condel;

import com.hp.hpl.jena.ontology.Individual;
import com.hp.hpl.jena.ontology.OntClass;
import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.rdf.model.Literal;
import com.hp.hpl.jena.rdf.model.Property;

public class Condel2owlG805 {
	
	public static String separator = "%-%-%";
	public final  String w3String = "http://www.w3.org/";
	public static String ns = "";
	
	public static OntModel transformToOWL(OntModel model, String codeWithSeparator)
	{		
		ns = model.getNsPrefixURI("");	
		boolean ComentBlockHappens = false;
		String comandlines[] = codeWithSeparator.split(separator);
		
		for (String instruction : comandlines) 
		{	
			instruction = instruction.replace(";", "");	
			
			//Comment Block
			if(instruction.contains("/*") || instruction.contains("*/"))
			{
				if(instruction.contains("/*") && instruction.contains("*/"))
				{
					//comments at the same line
					ComentBlockHappens = false;
					continue;
					
				} else {
					
					if(instruction.contains("/*"))
					{
						ComentBlockHappens = true;
						continue;
					}
					
					if(instruction.contains("*/"))
					{
						ComentBlockHappens = false;					
						continue;
					}
				}				
			}
						
			if(ComentBlockHappens == false){
				//System.out.println(instruction);
				model = transformComand(model, instruction);				
			}
				
		}
		
		return model;
	}

	private static OntModel transformComand(OntModel model, String instruction) {
		
		if (isClassDeclaration(instruction)){			
			
			instruction = instruction.replace(" ", "");
			
			String clsName = instruction.split(":")[0].replace(" ", "");
			String[] instances = instruction.split(":")[1].split(",");			
			OntClass cls = model.getOntClass(ns + clsName);
			
			for (String ins : instances) {
				
				cls.createIndividual(ns + ins.replace(" ", ""));
			}			
			
		} else if (isRelationDeclaration(instruction)){
			
			String instanceSource = instruction.split(" ")[0].replace(" ", "");
			String relation = instruction.split(" ")[1].replace(" ", "");
			
			Individual indInstance = model.getIndividual(ns + instanceSource);
			Property relationProp = model.getProperty(ns + relation);
			
			if(instruction.split(" ")[2].contains(","))
			{
				String[] instancesTarget = instruction.split(" ")[2].split(",");
				
				for (String ins : instancesTarget) {
					
					Individual indTarget = model.getIndividual(ns + ins.replace(" ", ""));
					indInstance.addProperty(relationProp, indTarget); 		//Add relation
				}				
				
			} else {
				
				String sTarget = instruction.split(" ")[2].replace(" ", "");
				Individual indTarget = model.getIndividual(ns + sTarget);
				indInstance.addProperty(relationProp, indTarget); 			//Add relation	
			}			
			
		} else if (isAtributeDeclaration(instruction)){
			
			String instanceSource = "";
			String value = "";
			String relationName = "";
			String classValue = "http://www.w3.org/2001/XMLSchema#integer";
			
			if(instruction.contains(".type:")) 
			{
				instanceSource = instruction.split(".type:")[0].replace(" ", "");
				value = instruction.split(".type:")[1].replace(" ", "");
				relationName = "Trail_Termination_Function.type";				
			}
			if(instruction.contains(".location:")) 
			{
				instanceSource = instruction.split(".location:")[0].replace(" ", "");
				value = instruction.split(".location:")[1].replace(" ", "");
				relationName = "Geographical_Element_With_Alias.location";
			}
			if(instruction.contains(".lat.deg:")) 
			{
				instanceSource = instruction.split(".lat.deg:")[0].replace(" ", "");
				value = instruction.split(".lat.deg:")[1].replace(" ", "");
				relationName = "Defined_Geographical_Element.latitude.degree";
				
			}
			if(instruction.contains(".lat.min:")) 
			{
				instanceSource = instruction.split(".lat.min:")[0].replace(" ", "");
				value = instruction.split(".lat.min:")[1].replace(" ", "");
				relationName = "Defined_Geographical_Element.latitude.minute";
			}
			if(instruction.contains(".lat.sec:")) 
			{
				instanceSource = instruction.split(".lat.sec:")[0].replace(" ", "");
				value = instruction.split(".lat.sec:")[1].replace(" ", "");
				relationName = "Defined_Geographical_Element.latitude.second";
				
			}
			if(instruction.contains(".lon.deg:")) 
			{
				instanceSource = instruction.split(".lon.deg:")[0].replace(" ", "");
				value = instruction.split(".lon.deg:")[1].replace(" ", "");
				relationName = "Defined_Geographical_Element.longitude.degree";
			}
			if(instruction.contains(".lon.min:")) 
			{
				instanceSource = instruction.split(".lon.min:")[0].replace(" ", "");
				value = instruction.split(".lon.min:")[1].replace(" ", "");
				relationName = "Defined_Geographical_Element.longitude.minute";
			}
			if(instruction.contains(".lon.sec:")) 
			{
				instanceSource = instruction.split(".lon.sec:")[0].replace(" ", "");
				value = instruction.split(".lon.sec:")[1].replace(" ", "");
				relationName = "Defined_Geographical_Element.longitude.second";
			}
			
			//Get instance, class, property
			Individual indInstance = model.getIndividual(ns + instanceSource);
			Literal literal = model.createTypedLiteral(value, classValue);
			Property relation = model.getDatatypeProperty(ns + relationName);
			indInstance.addProperty(relation, literal);			
			
		} else if (isDisjointWithDeclaration(instruction)){			
			
			String instanceSource = instruction.split("disjointWith")[0].replace(" ", "");
			Individual iSource = model.getIndividual(ns + instanceSource);
			
			if(instruction.split("disjointWith")[1].contains(","))
			{
				String[] instancesTarget = instruction.split("disjointWith")[1].split(",");
				
				for (String ins : instancesTarget) {
					
					ins = ins.replace(" ", "");
					Individual iTarget = model.getIndividual(ns + ins);
					
					iSource.setDifferentFrom(iTarget);
					iTarget.setDifferentFrom(iSource);
					
					//Applying at all
					for (String ins2 : instancesTarget) {
						
						ins2 = ins2.replace(" ", "");
						if(! ins2.equals(ins))
						{
							Individual iTarget2 = model.getIndividual(ns + ins2);
							
							iTarget.setDifferentFrom(iTarget2);
							iTarget2.setDifferentFrom(iTarget);
							
							iTarget2.setDifferentFrom(iSource);
							iSource.setDifferentFrom(iTarget2);
						}
					}	
				}	
				
			} else {
				
				String insTargetName = instruction.split("disjointWith")[1].replace(" ", "");
				Individual iTarget = model.getIndividual(ns + insTargetName);
				iSource.setDifferentFrom(iTarget);
				iTarget.setDifferentFrom(iSource);
			}

			
		} else if (isSameAsDeclaration(instruction)){
			
			String instanceSource = instruction.split("sameAs")[0].replace(" ", "");
			Individual iSource = model.getIndividual(ns + instanceSource);
			
			if(instruction.split("sameAs")[1].contains(","))
			{
				String[] instancesTarget = instruction.split("sameAs")[1].split(",");
				
				for (String ins : instancesTarget) {
					
					ins = ins.replace(" ", "");
					Individual iTarget = model.getIndividual(ns + ins);
									
					iSource.setSameAs(iTarget);
					iTarget.setSameAs(iSource);
					
					//Applying at all
					for (String ins2 : instancesTarget) {
						
						ins2 = ins2.replace(" ", "");
						if(! ins2.equals(ins))
						{
							Individual iTarget2 = model.getIndividual(ns + ins2);
							
							iTarget.setSameAs(iTarget2);
							iTarget2.setSameAs(iTarget);
							
							iTarget2.setSameAs(iSource);
							iSource.setSameAs(iTarget2);
						}
					}	
					
				}
				
			} else {
				
				String insTargetName = instruction.split("sameAs")[1].replace(" ", "");
				Individual iTarget = model.getIndividual(ns + insTargetName);
				iSource.setSameAs(iTarget);
				iTarget.setSameAs(iSource);
			}
			
		} else {
			
			//No valid instructions
		}			
		
		return model;
	}

	private static boolean isClassDeclaration(String instruction)
	{   
		if(  instruction.contains("Source_PM-FEP_Binding") || instruction.contains("Bound_Input_Interface_PM") || instruction.contains("Bidirectional_Access_Transport_Entity") || instruction.contains("Uni_Subnetwork_-_A_So_Connected") || instruction.contains("Output_Interface") || instruction.contains("Source_LPF-FEP") || instruction.contains("Source_Matrix") || instruction.contains("T_So_Input_-_So_AP_Bound") || instruction.contains("Bi_Path_CFTE") || instruction.contains("Sk_Matrix_Bi_Component") || instruction.contains("A_Sk_Output_-_Sk_LPF-FP_Bound") || instruction.contains("Unidirectional_A-FP") || instruction.contains("Physical_Media_Input") || instruction.contains("Active_Sk_PM-FEP_-_PM_NC_connected") || instruction.contains("Connected_Output_Interface") || instruction.contains("Source_M-FP_Bi_Component") || instruction.contains("Adaptation_Sink_Process") || instruction.contains("Forwarding_End_Point") || instruction.contains("Termination_Source_-_LPF_Connected") || instruction.contains("A_Sk_Output_-_Sk_SN-FP_Bound") || instruction.contains("Sink_CFTE_Bi_Component") || instruction.contains("T_So_Output_-_So_A-FEP_Bound") || instruction.contains("Adaptation_Sink") || instruction.contains("Binding") || instruction.contains("SN_-_Termination_Sink_Connected") || instruction.contains("Bi_PM_LC") || instruction.contains("Sink_LP-FP") || instruction.contains("Forwarding_Function_So_M_Connected") || instruction.contains("Topological_SN_Representation") || instruction.contains("Sink_PM-FEP") || instruction.contains("Sink_Site") || instruction.contains("Egress_SN_So") || instruction.contains("Active_Intermediate_Bidirectional_SN-FP") || instruction.contains("Source_CFTE") || instruction.contains("A_So_Output_-_So_AP_Bound") || instruction.contains("Access_Point") || instruction.contains("SN_Input_-_So_S-FEP_Bound") || instruction.contains("Source_MC") || instruction.contains("Bidirectional_AP") || instruction.contains("Bound_Output_Interface") || instruction.contains("Adaptation_Sink_Output") || instruction.contains("Bound_Transport_Function") || instruction.contains("Physical_Media_Output") || instruction.contains("Bidirectional_PM-FEP") || instruction.contains("Active_Sk_SN-FP_-_Int_CFTE_connected") || instruction.contains("Active_So_M-FP_-_So_MC_connected") || instruction.contains("Forwarding_Function_LC_") || instruction.contains("Forwarding_Rule_MC_Sk-So") || instruction.contains("PM_LC") || instruction.contains("LPF_So_Bidirectional_Component") || instruction.contains("Source_M-FEP_Binding") || instruction.contains("Sink_SN-FEP") || instruction.contains("Matrix_Connection") || instruction.contains("Sink_SN-FP") || instruction.contains("Source_SN-FP_Binding") || instruction.contains("Unidirectional_PM_NC") || instruction.contains("Source_AP_Bi_Component") || instruction.contains("A_So_-_Uni_Matrix_Connected") || instruction.contains("Bidirectional_Path_FEP") || instruction.contains("Uni_Sk-So_Matrix_Bi_Component") || instruction.contains("Access_Group") || instruction.contains("Egress_MC_Sk") || instruction.contains("LPF_-_Termination_Source_Connected_") || instruction.contains("Geographical_Element_With_Alias") || instruction.contains("Adaptation_Sink_-_T_Sk_Connected") || instruction.contains("Fowarding_Rule_Sk_SN") || instruction.contains("LPF_Input_-_Sk_LPF-FP_Bound") || instruction.contains("So_CFTE_Forwarding") || instruction.contains("Sink_LPF-FEP_Binding") || instruction.contains("Sink_SN-FEP_Binding") || instruction.contains("PM_-_Termination_Sink_Connected") || instruction.contains("SN-FP") || instruction.contains("Intermediate_CFTE") || instruction.contains("Sink_LPF-FEP_Bi_Component") || instruction.contains("Active_Sk_M-FP_-_Int_MC_connected") || instruction.contains("Equipment") || instruction.contains("Adaptation_Sink_-_A_So_Connected") || instruction.contains("Access_Transport_Entity") || instruction.contains("LC_Composed_Layer_Network") || instruction.contains("Intermediate_CFTE_Bi_Component") || instruction.contains("So_Matrix_Bi_Component") || instruction.contains("Forwarding_Function_CFTE_Sk") || instruction.contains("Egress_LC") || instruction.contains("Layer_Network") || instruction.contains("Path_Layer_Termination") || instruction.contains("Bidirectional_Sink-Source_Matrix") || instruction.contains("Ingress_SN_Sk") || instruction.contains("Equipment_Site_Component") || instruction.contains("Termination_Sink_Input") || instruction.contains("Bi_Intermediate_MC") || instruction.contains("Active_End_Bidirectional_SN-FEP") || instruction.contains("Input") || instruction.contains("A_Sk_Output_-_Sk_M-FP_Bound") || instruction.contains("Path_Bidirectional_Matrix") || instruction.contains("M_Output_-_Sk_M-FEP_Bound") || instruction.contains("Source_M-FP") || instruction.contains("Egress_MC_Sk-So") || instruction.contains("Ingress_LC") || instruction.contains("A_Sk_Output_-_Sk_LP-FP_Bound") || instruction.contains("Active_Sk_PM-FEP_-_PM_LC_connected") || instruction.contains("Active_So_M-FEP_-_So_MC_connected") || instruction.contains("Directly_Bound_Reference_Point") || instruction.contains("Adaptation_Sk_Bidirectional_Component") || instruction.contains("PM_-_Termination_Source_Connected") || instruction.contains("A_Sk_-_Uni_Subnetwork_Connected") || instruction.contains("Adaptation_Source_Input") || instruction.contains("Transmission_Media_Layer_Network") || instruction.contains("Bound__Output_Interface_Equipment") || instruction.contains("Layer_Processor_Sink_Output") || instruction.contains("Source_SN-FP_Bi_Component") || instruction.contains("Connected_Unidirectional_Matrix") || instruction.contains("Bidirectional_Termination_-_Bi_M_Connected") || instruction.contains("Supporting_LC") || instruction.contains("Sink_CFTE") || instruction.contains("Source_AP") || instruction.contains("Layer_Processor_Source_Output") || instruction.contains("Termination_Sink_Output") || instruction.contains("T_Sk_Input_-_Sk_M-FEP_Bound") || instruction.contains("Topological_Layer") || instruction.contains("NC_Supported_by_CFTE") || instruction.contains("Sink_LPF-FEP") || instruction.contains("Possible_Bi_LC_Connected_RP") || instruction.contains("Matrix_Input") || instruction.contains("Source_SN-FEP_Bi_Component") || instruction.contains("Bidirectional_LPF_-_Bi_Termination_Connected") || instruction.contains("Sink_M-FEP") || instruction.contains("Sink_SN-FP_Bi_Component") || instruction.contains("LPF_Output_-_So_L-FP_Bound") || instruction.contains("Bidirectional_M-FEP") || instruction.contains("Bidirectional_MC") || instruction.contains("Connected_Relatable_TC") || instruction.contains("Source_M-FEP_Bi_Component") || instruction.contains("Composed_Topological_Layer") || instruction.contains("Transport_Funtion_Equipment_Component") || instruction.contains("Section_Layer_Network") || instruction.contains("Bidirectional_Adaptation_-_LPF_Bi_Connected") || instruction.contains("Reference_Point") || instruction.contains("Geographical_Element") || instruction.contains("Termination_So_Bidirectional_Component") || instruction.contains("Bi_Subnetwork_-_A_Bi_Connected") || instruction.contains("Bidirectional_Termination_-_Ag_PM_Connected") || instruction.contains("Layer_Processor_Function") || instruction.contains("M_-_Termination_Source_Connected") || instruction.contains("Forwarding_Function_CFTE_Sk-So") || instruction.contains("Termination_Sk_Bidirectional_Component") || instruction.contains("A_So_Input_-_A-FP_Bound") || instruction.contains("Bound_Input_Interface") || instruction.contains("Source_PM-FEP_Bi_Component") || instruction.contains("T_Sk_Input_-_Sk_SN-FEP_Bound") || instruction.contains("Unidirectional_Access_Transport_Entity_Bidirectional_Component") || instruction.contains("M_Input_-_Sk_M-FP_Bound") || instruction.contains("Forwarding_Rule_MC_So") || instruction.contains("Directly_Connected_Transport_Entity") || instruction.contains("Sk_MC_Forwarding") || instruction.contains("Equipment_Composed_Site") || instruction.contains("Bidirectional_Layer_Processor_-_A_Bi_Connected") || instruction.contains("A_So_Input_-_So_SN-FP_Bound") || instruction.contains("Forwarding_Rule_LC") || instruction.contains("Source_M-FP_Binding") || instruction.contains("Uni_Matrix_-_A_So_Connected") || instruction.contains("A_-_Layer_Processor_Sink_Connected") || instruction.contains("Sink_LPF-FEP_Bound") || instruction.contains("Forwarding_Function_CFTE_So-Sk") || instruction.contains("Section_Layer_Termination") || instruction.contains("LPF_-_Termination_Sink_Connected") || instruction.contains("Layer_Processor_Function_Source") || instruction.contains("Supporting_Access_Transport_Entity") || instruction.contains("Input_Interface") || instruction.contains("Source_Active_RP_-_Path_LC_connected") || instruction.contains("Bidirectional_Adaptation_-_Bi_A_Connected") || instruction.contains("Bound_Input-Output") || instruction.contains("T_Sk_Input_-_Sk_A-FEP_Bound") || instruction.contains("Component_Subnetwork") || instruction.contains("Client_Path_Layer") || instruction.contains("Path-Path_Client_Layer") || instruction.contains("Bidirectional_SN-FP") || instruction.contains("Bidirectional_Layer_Processor_Function") || instruction.contains("Bidirectional_PM_NC") || instruction.contains("Uni_Subnetwork_-_A_Sk_Connected") || instruction.contains("Bidirectional_Adaptation") || instruction.contains("Source_SN-FEP") || instruction.contains("Bi_A_-_Bidirectional_Termination_Connected") || instruction.contains("T_So_Output_-_So_SN-FEP_Bound") || instruction.contains("Sink_MC") || instruction.contains("Path-Path_Layers_AF") || instruction.contains("Unidirectional_Sink-Source_Matrix") || instruction.contains("NC_Supported_by_MC") || instruction.contains("A-FP") || instruction.contains("End_CFTE_Bi_Component") || instruction.contains("A_Sk_Output_-_Sk_A-FEP_Bound") || instruction.contains("Forwarding_Rule_So_SN") || instruction.contains("Physical_Media_Layer_Termination") || instruction.contains("Active_Bidirectional_Path_FEP_-_Path_NC_Connected") || instruction.contains("Mapped_Input_Interface") || instruction.contains("A_So_Input_-_So_LPF-FP_Bound") || instruction.contains("Unidirectional_MC") || instruction.contains("Termination_Sink_Process") || instruction.contains("Sink_FEP") || instruction.contains("Forwarding_Function_Matrix") || instruction.contains("Layer_Processor_Source_Process") || instruction.contains("Layer_Processor_Source_-_A_Connected") || instruction.contains("AP_Forwarding") || instruction.contains("Active_Bidirectional_PM-FEP_-_PM_NC_Connected") || instruction.contains("Forwarding_Function_Sk-So_Connected") || instruction.contains("Active_Sink_AP") || instruction.contains("Bi_Path_MC") || instruction.contains("Source_L-FP_Binding") || instruction.contains("Unidirectional_Path_NC_Bidirectional_Component") || instruction.contains("Ag_PM_-_Bidirectional_Termination_Connected") || instruction.contains("LP_Input_-_Sk_LP-FP_Bound") || instruction.contains("Active_So_M-FP_-_Int_MC_connected") || instruction.contains("Topological_M_Representation") || instruction.contains("Source_A-FEP_Bi_Component") || instruction.contains("M_-_Termination_Sink_Connected") || instruction.contains("Termination_Source_-_M_Connected") || instruction.contains("Bi_End_CFTE") || instruction.contains("Sk_CFTE_Forwarding") || instruction.contains("Matrix_Output") || instruction.contains("Transmission_Media_Layer_Termination") || instruction.contains("A_So_-_Uni_Subnetwork_Connected") || instruction.contains("T_Sk_Input_-_Sk_PM-FEP_Bound") || instruction.contains("Sink_M-FP") || instruction.contains("Possible_Egress_LC") || instruction.contains("Path_Connected_Reference_Point") || instruction.contains("PM_LC_Bi_Component") || instruction.contains("A-FP_Binding") || instruction.contains("Single_Equipment_Site_Component") || instruction.contains("Forwarding_Rule_Sk-So") || instruction.contains("Active_Sk_M-FEP_-_Sk_MC_connected") || instruction.contains("Source_CFTE_Bi_Component") || instruction.contains("Source_FEP") || instruction.contains("Bidirectional_Termination_-_Bi_LPF_Connection") || instruction.contains("Termination_Source_-_PM_Connected") || instruction.contains("Termination_Source_Input") || instruction.contains("Termination_Sink_-_A_Sk_Connected") || instruction.contains("Sink_M-FP_Binding") || instruction.contains("Mapped_TF_Input") || instruction.contains("Client_Section_Layer") || instruction.contains("Network_Connection") || instruction.contains("Sink_M-FEP_Binding") || instruction.contains("Bidirectional_NC") || instruction.contains("Active_So_Path-FEP_-_Path_NC_connected") || instruction.contains("Sink_MC_Bi_Component") || instruction.contains("Source_LP-FP") || instruction.contains("Supporting_NC") || instruction.contains("Termination_Source_Process") || instruction.contains("Source_LP-FP_Binding") || instruction.contains("Source_AP_Binding") || instruction.contains("PM_Input_-_So_PM-FEP_Bound") || instruction.contains("Adaptation_Source") || instruction.contains("Related_Layer_Network") || instruction.contains("Termination_Sink_-_M_Connected") || instruction.contains("Adaptation_Source_Process") || instruction.contains("Possible_LC_Connected_RP") || instruction.contains("LP-FP") || instruction.contains("Egress_MC_So") || instruction.contains("Source_MC_Bi_Component") || instruction.contains("Uni_A-FP_Bi_Component") || instruction.contains("SN_Intput_-_Sk_SN-FP_Bound") || instruction.contains("Transport_Function") || instruction.contains("Site") || instruction.contains("SN_Outtput_-_So_SN-FP_Bound") || instruction.contains("Section-Physical_Media_Layers_AF") || instruction.contains("Forwarding") || instruction.contains("Int_MC_Forwarding") || instruction.contains("Termination_Source") || instruction.contains("Forwarding_Function_CFTE_So") || instruction.contains("Physical_Media_Layer_Network") || instruction.contains("Layer_Processor_Sink_Input") || instruction.contains("Intermediate_MC") || instruction.contains("Active_Intermediate_Bidirectional_M-FP") || instruction.contains("Ingress_SN_So") || instruction.contains("Matrix") || instruction.contains("Layer_Processor_Source_Input") || instruction.contains("Bidirectional_M-FP") || instruction.contains("Active_Sk_Path-FEP_-_Path_NC_connected") || instruction.contains("Sink_PM-FEP_Binding") || instruction.contains("Layer_Processor_Process") || instruction.contains("Active_Bidirectional_PM-FEP_-_PM_LC_Connected") || instruction.contains("Topological_Subnetwork") || instruction.contains("A_So_-_Adaptation_Sink_Connected") || instruction.contains("Output") || instruction.contains("Adaptation_Sink_Input") || instruction.contains("Sink_AP_Binding") || instruction.contains("Termination_Sink_-_PM_Connected") || instruction.contains("Sink_Matrix") || instruction.contains("Bidirectional_LC") || instruction.contains("Termination_Function") || instruction.contains("Source_M-FEP") || instruction.contains("Bidirectional_LPF-FEP") || instruction.contains("Possible_Ingress_LC") || instruction.contains("Bidirectional_A-FP") || instruction.contains("So_MC_Forwarding") || instruction.contains("Path_Layer_Network") || instruction.contains("LC_Connected_RP") || instruction.contains("T_So_Output_-_So_M-FEP_Bound") || instruction.contains("Connected_Reference_Point") || instruction.contains("Source_LPF-FEP_Bi_Component") || instruction.contains("Composed_AG") || instruction.contains("Sink_AP") || instruction.contains("M_Output_-_So_M-FP_Bound") || instruction.contains("Sink_Active_RP_-_Path_LC_connected") || instruction.contains("Relatable_Topological_Components") || instruction.contains("Termination_Sink_-_LPF_Connected") || instruction.contains("Mapped_Output_Interface") || instruction.contains("Layer_Processor_Function_Sink") || instruction.contains("Sink_Path_FEP") || instruction.contains("Bi_Termination_-_Bidirectional_A_Connected") || instruction.contains("Unidirectional_Matrix") || instruction.contains("Termination_Source_Output") || instruction.contains("Architectural_Component") || instruction.contains("Forwarding_Rule") || instruction.contains("Bidirectional_Path_NC") || instruction.contains("A_So_Input_-_So_A-FEP_Bound") || instruction.contains("Sink_AP_Bi_Component") || instruction.contains("Active_So_PM-FEP_-_PM_LC_connected") || instruction.contains("Component_Matrix") || instruction.contains("Composed_PM_Layer") || instruction.contains("Termination_Source_-_SN_Connected") || instruction.contains("Unidirectional_PM_NC_Bidirectional_Component") || instruction.contains("Bidirectional_FEP") || instruction.contains("Unidirectional_NC") || instruction.contains("Sink_A-FEP_Bi_Component") || instruction.contains("PM_Output_-_Sk_PM-FEP_Bound") || instruction.contains("Forwarding_Function_CFTE") || instruction.contains("Active_Bidirectional_AP") || instruction.contains("Termination_Source_-_A_So_Connected") || instruction.contains("PM_Interface_Bound_Input") || instruction.contains("Supporting_CFTE") || instruction.contains("Bi_M_-_Bidirectional_Termination_Connected") || instruction.contains("PM_LC_Forwarding") || instruction.contains("Bidirectional_LP-FP") || instruction.contains("Server_Physical_Media_Layer") || instruction.contains("Mapped_TF_Output") || instruction.contains("Ingress_SN_Sk-So") || instruction.contains("Physical_Media_Component") || instruction.contains("Ingress_MC_Sk") || instruction.contains("LPF_Output_-_So_LPF-FP_Bound") || instruction.contains("Sink_A-FEP_Binding") || instruction.contains("TE_Connected_Reference_Point") || instruction.contains("Active_Path_Bidirectional_SN-FP") || instruction.contains("Active_Sk_SN-FEP_-_Sk_CFTE_connected") || instruction.contains("Egress_SN_Sk-So") || instruction.contains("Unidirectional_Port") || instruction.contains("Unidirectional_Subnetwork") || instruction.contains("Forwarding_Rule_So-Sk") || instruction.contains("LPF_Input_-_So_L-FEP_Bound") || instruction.contains("T_So_-_Adaptation_Source_Connected") || instruction.contains("Bidirectional_SN-FEP") || instruction.contains("Single_AG") || instruction.contains("NC_Supported_by_LC") || instruction.contains("Active_Path_Bidirectional_M-FP") || instruction.contains("M-FP") || instruction.contains("Unidirectional_Path_NC") || instruction.contains("T_Sk_Input_-_Sk_LPF-FEP_Bound") || instruction.contains("Active_Sk_M-FP_-_Sk_MC_connected") || instruction.contains("Adaptation_So_Bidirectional_Component") || instruction.contains("Source_LP-FP_Bi_Component") || instruction.contains("A_Sk_Input_-_Sk_AP_Bound") || instruction.contains("Single_Termination") || instruction.contains("Bi_A_-_Bi_Matrix_Connected") || instruction.contains("Adaptation_Function") || instruction.contains("Unidirectional_LC") || instruction.contains("A_-_LPF_Source_Connected") || instruction.contains("Subnetwork") || instruction.contains("Forwarding_Function_LC_Connected") || instruction.contains("Active_So_SN-FEP_-_So_CFTE_connected") || instruction.contains("Sink_M-FP_Bi_Component") || instruction.contains("Path-Section_Layers_AF") || instruction.contains("Unidirectional_Access_Transport_Entity") || instruction.contains("Bidirectional_Termination_-_Bi_SN_Connected") || instruction.contains("Subnetwork_Input") || instruction.contains("Bidirectional_Termination_-_Bi_A_Connected") || instruction.contains("Connected_Input_Interface") || instruction.contains("Egress_SN_Sk") || instruction.contains("Bi_Matrix_-_A_Bi_Connected") || instruction.contains("Forwarding_Function") || instruction.contains("Ingress_MC_Sk-So") || instruction.contains("T_So_Output_-_So_LPF-FEP_Bound") || instruction.contains("Multiple_Equipment_Composed_Site") || instruction.contains("Source_Path_FEP") || instruction.contains("Site_Component_Equipment") || instruction.contains("Active_So_SN-FP_-_Int_CFTE_connected") || instruction.contains("Active_Sk_SN-FEP_-_End_CFTE_connected") || instruction.contains("Layer_Processor_Sink_-_A_Connected") || instruction.contains("Bidirectional_Connected_Subnetwork") || instruction.contains("Active_Sk_SN-FP_-_Sk_CFTE_connected") || instruction.contains("Source_Site") || instruction.contains("PM_NC_Forwarding") || instruction.contains("Server_Path_Layer") || instruction.contains("Matrix_Composed_Path_Layer") || instruction.contains("Bi_Intermediate_CFTE") || instruction.contains("Source_A-FEP") || instruction.contains("End_CFTE") || instruction.contains("Co-located_Termination") || instruction.contains("Sink_LP-FP_Bi_Component") || instruction.contains("Bi_SN_-_Bidirectional_Termination_Connected") || instruction.contains("T_So_Output_-_So_PM-FEP_Bound") || instruction.contains("Int_CFTE_Forwarding") || instruction.contains("Intermediate_MC_Bi_Component") || instruction.contains("Active_Possible_Bi_LC_Connected_RP") || instruction.contains("Adaptation_Source_-_T_So_Connected") || instruction.contains("Source_LPF-FEP_Binding") || instruction.contains("Ingress_SN_So-Sk") || instruction.contains("LPF_Sk_Bidirectional_Component") || instruction.contains("A_Sk_-_Uni_Matrix_Connected") || instruction.contains("Aggregated_Physical_Media") || instruction.contains("Supporting_MC") || instruction.contains("Source_SN-FEP_Binding") || instruction.contains("Sink_SN-FEP_Bi_Component") || instruction.contains("Bidirectional_Matrix") || instruction.contains("SN_Output_-_Sk_S-FEP_Bound") || instruction.contains("T_Sk_-_Adaptation_Sink_Connected") || instruction.contains("Sink_LP-FP_Binding") || instruction.contains("Topological_Component") || instruction.contains("Adaptation_Source_Output") || instruction.contains("Termination_Sink") || instruction.contains("Topological_Link") || instruction.contains("Termination_Sink_-_SN_Connected") || instruction.contains("Physical_Media") || instruction.contains("Path_LC") || instruction.contains("Bidirectional_CFTE") || instruction.contains("Subnetwork_Output") || instruction.contains("Active_Source_AP") || instruction.contains("Transport_Entity") || instruction.contains("Path-Section_Client_Layer") || instruction.contains("Forwarding_Rule_MC_Sk") || instruction.contains("A_Sk_Output_-_A-FP_Bound") || instruction.contains("Bidirectional_Termination") || instruction.contains("A_Sk_-_Termination_Sink_Connected") || instruction.contains("A_So_Input_-_So_M-FP_Bound") || instruction.contains("M_Input_-_So_M-FEP_Bound") || instruction.contains("Link_Connection") || instruction.contains("Bidirectional_Adaptation_-_Bi_T_Connected") || instruction.contains("Sink_SN-FP_Binding") || instruction.contains("Uni_Matrix_-_A_Sk_Connected") || instruction.contains("Source_A-FEP_Binding") || instruction.contains("Bound_Input_Interface_Equipment") || instruction.contains("Subnetwork_Composed_Path_Layer") || instruction.contains("Transport_Processing_Function") || instruction.contains("Bidirectional_A-FEP") || instruction.contains("Active_So_SN-FP_-_So_CFTE_connected") || instruction.contains("Source_PM-FEP") || instruction.contains("Sink_A-FEP") || instruction.contains("Single_Equipment_Site") || instruction.contains("Forwarding_Function_Sk_M_Connected") || instruction.contains("Bound_Output_Interface_PM") || instruction.contains("Active_So_PM-FEP_-_PM_NC_connected") || instruction.contains("End_Forwarding") || instruction.contains("SN_-_Termination_Source_Connected") || instruction.contains("Path_LC_Forwarding") || instruction.contains("Physical_Media_Layer_Component") || instruction.contains("Source_SN-FP") || instruction.contains("Ingress_MC_So") || instruction.contains("PM_Interface_Bound_Output") || instruction.contains("Unidirectional_CFTE") || instruction.contains("A_So_-_Termination_Source_Connected") || instruction.contains("Sink_PM-FEP_Bi_Component") || instruction.contains("Bi_Path_LC") || instruction.contains("Sink_M-FEP_Bi_Component") || instruction.contains("Active_Path_Bidirectional_M-FEP") || instruction.contains("A_So_Input_-_So_L-FP_Bound") || instruction.contains("Defined_Geographical_Element") || instruction.contains("Single_Physical_Media") || instruction.contains("Bi_A_-_Bi_Subnetwork_Connected") || instruction.contains("Forwarding_Point") || instruction.contains("Component_LPF") || instruction.contains("Active_So_SN-FEP_-_End_CFTE_connected") || instruction.contains("Active_Path_Bidirectional_SN-FEP") || instruction.contains("Channel_Forwarding_Transport_Entity") || instruction.contains("T_Sk_Output_-_Sk_AP_Bound") || instruction.contains("Path_LC_Bi_Component") || instruction.contains("LPF_-_Sk_L-FEP_Bound") || instruction.contains("Server_Section_Layer") )
		{
			return true;
		} else
		{
			return false;
		}		
	}
	
	private static boolean isRelationDeclaration(String instruction)
	{
		/* Object properties */
		
		if( instruction.contains(" binds_So_L-FP ") || instruction.contains(" INV.set_egress ") || instruction.contains(" componentOf ") || instruction.contains(" supports ") || instruction.contains(" INV.componentOf ") || instruction.contains(" is_configured_by ") || instruction.contains(" INV.represents ") || instruction.contains(" INV.memberOf ") || instruction.contains(" is_defined_by ") || instruction.contains(" set_ingress ") || instruction.contains(" INV.set_ingress ") || instruction.contains(" represents ") || instruction.contains(" INV.is_defined_by ") || instruction.contains(" INV.is_configured_by ") || instruction.contains(" INV.supports ") || instruction.contains(" set_egress ") || instruction.contains(" INV.binds_So_L-FP ") || instruction.contains(" memberOf ") || instruction.contains(" INV.is_defined_by.Forwarding_Rule_Sk-So.Forwarding_Function_CFTE_Sk-So ") || instruction.contains(" is_defined_by.Forwarding_Rule_So-Sk.Forwarding_Function_CFTE_So-Sk ") || instruction.contains(" componentOf.Bidirectional_Access_Transport_Entity.Unidirectional_Access_Transport_Entity_Bidirectional_Component ") || instruction.contains(" componentOf.Bi_Path_LC.Path_LC_Bi_Component ") || instruction.contains(" INV.set_ingress.Forwarding_Rule_MC_So.Ingress_MC_So ") || instruction.contains(" INV.componentOf.Equipment.Input_Interface ") || instruction.contains(" INV.componentOf.Equipment.Output_Interface ") || instruction.contains(" INV.componentOf.Bidirectional_Access_Transport_Entity.Unidirectional_Access_Transport_Entity_Bidirectional_Component ") || instruction.contains(" componentOf.Bidirectional_AP.Source_AP_Bi_Component ") || instruction.contains(" set_egress.Forwarding_Rule_Sk-So.Egress_SN_Sk-So ") || instruction.contains(" INV.componentOf.Topological_Layer.Access_Group ") || instruction.contains(" INV.binds_So_L-FP.LP_Input_-_Sk_LP-FP_Bound.A_Sk_Output_-_Sk_LP-FP_Bound ") || instruction.contains(" set_ingress.Forwarding_Rule_Sk-So.Ingress_SN_Sk-So ") || instruction.contains(" componentOf.Unidirectional_Subnetwork.Subnetwork_Input ") || instruction.contains(" INV.componentOf.Single_Physical_Media.Physical_Media_Output ") || instruction.contains(" componentOf.Adaptation_Sink.Adaptation_Sink_Process ") || instruction.contains(" represents.Topological_Layer.Layer_Network ") || instruction.contains(" is_configured_by.Sk_MC_Forwarding.Forwarding_Function_Sk_M_Connected ") || instruction.contains(" componentOf.Composed_Topological_Layer.Connected_Relatable_TC ") || instruction.contains(" componentOf.Layer_Processor_Function_Source.Layer_Processor_Source_Output ") || instruction.contains(" componentOf.Adaptation_Source.Adaptation_Source_Input ") || instruction.contains(" INV.set_egress.Forwarding_Rule_Sk-So.Egress_SN_Sk-So ") || instruction.contains(" INV.componentOf.Bi_End_CFTE.End_CFTE_Bi_Component ") || instruction.contains(" componentOf.Termination_Sink.Termination_Sink_Process ") || instruction.contains(" componentOf.Bidirectional_LP-FP.Sink_LP-FP_Bi_Component ") || instruction.contains(" set_ingress.Forwarding_Rule_MC_So.Ingress_MC_So ") || instruction.contains(" INV.is_configured_by.Int_CFTE_Forwarding.Forwarding_Function_CFTE_Sk-So ") || instruction.contains(" set_ingress.Forwarding_Rule_So_SN.Ingress_SN_So ") || instruction.contains(" componentOf.Single_Physical_Media.Physical_Media_Output ") || instruction.contains(" componentOf.Bidirectional_LP-FP.Source_LP-FP_Bi_Component ") || instruction.contains(" INV.componentOf.LC_Composed_Layer_Network.Link_Connection ") || instruction.contains(" binds_So_L-FP.LP_Input_-_Sk_LP-FP_Bound.A_Sk_Output_-_Sk_LP-FP_Bound ") || instruction.contains(" represents.Single_Equipment_Site.Single_Equipment_Site_Component ") || instruction.contains(" INV.componentOf.Bidirectional_SN-FP.Source_SN-FP_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_A-FP.Uni_A-FP_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_Termination.Termination_So_Bidirectional_Component ") || instruction.contains(" INV.componentOf.Bidirectional_M-FP.Sink_M-FP_Bi_Component ") || instruction.contains(" INV.is_configured_by.So_CFTE_Forwarding.Forwarding_Function_CFTE_So ") || instruction.contains(" INV.componentOf.Path_Bidirectional_Matrix.Sk_Matrix_Bi_Component ") || instruction.contains(" componentOf.Physical_Media_Layer_Network.Physical_Media_Layer_Termination ") || instruction.contains(" represents.Topological_Link.Link_Connection ") || instruction.contains(" INV.componentOf.Unidirectional_Subnetwork.Subnetwork_Output ") || instruction.contains(" INV.componentOf.Bidirectional_LPF-FEP.Sink_LPF-FEP_Bi_Component ") || instruction.contains(" componentOf.Composed_PM_Layer.Physical_Media_Layer_Component ") || instruction.contains(" supports.Supporting_Access_Transport_Entity.Path_LC ") || instruction.contains(" INV.componentOf.Termination_Source.Termination_Source_Input ") || instruction.contains(" componentOf.Bi_Path_MC.Sink_MC_Bi_Component ") || instruction.contains(" componentOf.Unidirectional_Subnetwork.Subnetwork_Output ") || instruction.contains(" INV.componentOf.Bidirectional_M-FEP.Source_M-FEP_Bi_Component ") || instruction.contains(" INV.is_configured_by.End_Forwarding.Forwarding_Function_CFTE_So-Sk ") || instruction.contains(" componentOf.Adaptation_Source.Adaptation_Source_Process ") || instruction.contains(" componentOf.Adaptation_Sink.Adaptation_Sink_Input ") || instruction.contains(" INV.componentOf.Bi_Path_CFTE.Sink_CFTE_Bi_Component ") || instruction.contains(" INV.represents.Topological_Link.Link_Connection ") || instruction.contains(" componentOf.Bidirectional_SN-FEP.Source_SN-FEP_Bi_Component ") || instruction.contains(" INV.represents.Single_AG.Single_Termination ") || instruction.contains(" componentOf.Bidirectional_Layer_Processor_Function.LPF_So_Bidirectional_Component ") || instruction.contains(" memberOf.Aggregated_Physical_Media.Physical_Media_Component ") || instruction.contains(" INV.componentOf.Bi_Path_MC.Source_MC_Bi_Component ") || instruction.contains(" INV.set_egress.Fowarding_Rule_Sk_SN.Egress_SN_Sk ") || instruction.contains(" INV.is_defined_by.Int_MC_Forwarding.Forwarding_Rule_MC_Sk-So ") || instruction.contains(" INV.componentOf.Bidirectional_Adaptation.Adaptation_Sk_Bidirectional_Component ") || instruction.contains(" componentOf.Subnetwork_Composed_Path_Layer.Component_Subnetwork ") || instruction.contains(" INV.componentOf.Bidirectional_A-FEP.Sink_A-FEP_Bi_Component ") || instruction.contains(" INV.supports.Supporting_NC.Access_Transport_Entity ") || instruction.contains(" INV.memberOf.Aggregated_Physical_Media.Physical_Media_Component ") || instruction.contains(" INV.componentOf.Bidirectional_M-FP.Source_M-FP_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_Adaptation.Adaptation_So_Bidirectional_Component ") || instruction.contains(" componentOf.Bidirectional_M-FEP.Source_M-FEP_Bi_Component ") || instruction.contains(" componentOf.Single_Physical_Media.Physical_Media_Input ") || instruction.contains(" componentOf.Multiple_Equipment_Composed_Site.Equipment_Site_Component ") || instruction.contains(" INV.is_defined_by.Forwarding_Rule_MC_Sk.Sk_MC_Forwarding ") || instruction.contains(" set_egress.Forwarding_Rule_So_SN.Egress_SN_So ") || instruction.contains(" INV.supports.Supporting_CFTE.NC_Supported_by_CFTE ") || instruction.contains(" INV.binds_So_L-FP.LPF_Output_-_So_L-FP_Bound.A_So_Input_-_So_L-FP_Bound ") || instruction.contains(" INV.represents.Topological_M_Representation.Matrix ") || instruction.contains(" componentOf.Bidirectional_LPF-FEP.Source_LPF-FEP_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_A-FEP.Source_A-FEP_Bi_Component ") || instruction.contains(" set_ingress.Forwarding_Rule_MC_Sk-So.Ingress_MC_Sk-So ") || instruction.contains(" componentOf.Bi_End_CFTE.End_CFTE_Bi_Component ") || instruction.contains(" componentOf.Bidirectional_SN-FP.Sink_SN-FP_Bi_Component ") || instruction.contains(" represents.Single_AG.Single_Termination ") || instruction.contains(" supports.Supporting_CFTE.NC_Supported_by_CFTE ") || instruction.contains(" INV.componentOf.Bidirectional_PM-FEP.Source_PM-FEP_Bi_Component ") || instruction.contains(" componentOf.Bidirectional_Path_NC.Unidirectional_Path_NC_Bidirectional_Component ") || instruction.contains(" INV.componentOf.Unidirectional_Subnetwork.Subnetwork_Input ") || instruction.contains(" INV.componentOf.Matrix_Composed_Path_Layer.Component_Matrix ") || instruction.contains(" componentOf.Termination_Source.Termination_Source_Process ") || instruction.contains(" INV.componentOf.Bidirectional_Layer_Processor_Function.LPF_So_Bidirectional_Component ") || instruction.contains(" is_configured_by.Int_MC_Forwarding.Forwarding_Function_Sk-So_Connected ") || instruction.contains(" INV.set_egress.Forwarding_Rule_MC_Sk-So.Egress_MC_Sk-So ") || instruction.contains(" INV.represents.Topological_SN_Representation.Subnetwork ") || instruction.contains(" INV.componentOf.Bidirectional_Path_NC.Unidirectional_Path_NC_Bidirectional_Component ") || instruction.contains(" componentOf.Termination_Sink.Termination_Sink_Output ") || instruction.contains(" INV.is_configured_by.Sk_MC_Forwarding.Forwarding_Function_Sk_M_Connected ") || instruction.contains(" set_ingress.Fowarding_Rule_Sk_SN.Ingress_SN_Sk ") || instruction.contains(" componentOf.Bidirectional_Adaptation.Adaptation_Sk_Bidirectional_Component ") || instruction.contains(" INV.componentOf.Bidirectional_AP.Sink_AP_Bi_Component ") || instruction.contains(" INV.componentOf.Adaptation_Sink.Adaptation_Sink_Process ") || instruction.contains(" INV.componentOf.Bidirectional_SN-FEP.Source_SN-FEP_Bi_Component ") || instruction.contains(" componentOf.Layer_Processor_Function_Source.Layer_Processor_Source_Input ") || instruction.contains(" supports.Supporting_NC.Access_Transport_Entity ") || instruction.contains(" INV.componentOf.Composed_PM_Layer.Physical_Media_Layer_Component ") || instruction.contains(" INV.set_egress.Forwarding_Rule_MC_Sk.Egress_MC_Sk ") || instruction.contains(" INV.supports.Supporting_LC.NC_Supported_by_LC ") || instruction.contains(" INV.componentOf.Bidirectional_PM-FEP.Sink_PM-FEP_Bi_Component ") || instruction.contains(" INV.is_configured_by.Int_MC_Forwarding.Forwarding_Function_Sk-So_Connected ") || instruction.contains(" INV.set_ingress.Forwarding_Rule_MC_Sk-So.Ingress_MC_Sk-So ") || instruction.contains(" componentOf.Bidirectional_A-FEP.Source_A-FEP_Bi_Component ") || instruction.contains(" INV.componentOf.Layer_Processor_Function_Sink.Layer_Processor_Sink_Output ") || instruction.contains(" componentOf.Bidirectional_M-FEP.Sink_M-FEP_Bi_Component ") || instruction.contains(" componentOf.Bi_Intermediate_CFTE.Intermediate_CFTE_Bi_Component ") || instruction.contains(" componentOf.Bidirectional_Layer_Processor_Function.LPF_Sk_Bidirectional_Component ") || instruction.contains(" is_configured_by.Int_CFTE_Forwarding.Forwarding_Function_CFTE_Sk-So ") || instruction.contains(" INV.componentOf.Path_Layer_Network.Component_LPF ") || instruction.contains(" set_ingress.Forwarding_Rule_LC.Ingress_LC ") || instruction.contains(" INV.represents.Composed_AG.Co-located_Termination ") || instruction.contains(" INV.componentOf.Adaptation_Source.Adaptation_Source_Output ") || instruction.contains(" componentOf.Bidirectional_LPF-FEP.Sink_LPF-FEP_Bi_Component ") || instruction.contains(" INV.componentOf.Path_Bidirectional_Matrix.So_Matrix_Bi_Component ") || instruction.contains(" componentOf.Adaptation_Sink.Adaptation_Sink_Output ") || instruction.contains(" INV.componentOf.Bi_Intermediate_CFTE.Intermediate_CFTE_Bi_Component ") || instruction.contains(" INV.componentOf.Termination_Source.Termination_Source_Output ") || instruction.contains(" set_egress.Forwarding_Rule_MC_Sk.Egress_MC_Sk ") || instruction.contains(" is_defined_by.Forwarding_Rule_MC_So.Forwarding_Function_So_M_Connected ") || instruction.contains(" INV.set_ingress.Forwarding_Rule_Sk-So.Ingress_SN_Sk-So ") || instruction.contains(" set_egress.Forwarding_Rule_So-Sk.Egress_SN_Sk-So ") || instruction.contains(" INV.componentOf.Bi_PM_LC.PM_LC_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_M-FEP.Sink_M-FEP_Bi_Component ") || instruction.contains(" is_defined_by.Fowarding_Rule_Sk_SN.Forwarding_Function_CFTE_Sk ") || instruction.contains(" set_egress.Fowarding_Rule_Sk_SN.Egress_SN_Sk ") || instruction.contains(" componentOf.Bidirectional_SN-FEP.Sink_SN-FEP_Bi_Component ") || instruction.contains(" binds_So_L-FP.LPF_Output_-_So_L-FP_Bound.A_So_Input_-_So_L-FP_Bound ") || instruction.contains(" componentOf.Bi_Intermediate_MC.Intermediate_MC_Bi_Component ") || instruction.contains(" is_configured_by.So_MC_Forwarding.Forwarding_Function_So_M_Connected ") || instruction.contains(" componentOf.Bidirectional_AP.Sink_AP_Bi_Component ") || instruction.contains(" set_egress.Forwarding_Rule_MC_So.Egress_MC_So ") || instruction.contains(" set_egress.Forwarding_Rule_MC_Sk-So.Egress_MC_Sk-So ") || instruction.contains(" INV.componentOf.Multiple_Equipment_Composed_Site.Equipment_Site_Component ") || instruction.contains(" componentOf.Adaptation_Source.Adaptation_Source_Output ") || instruction.contains(" INV.componentOf.Layer_Processor_Function_Sink.Layer_Processor_Process ") || instruction.contains(" is_defined_by.Forwarding_Rule_So_SN.Forwarding_Function_CFTE_So ") || instruction.contains(" INV.set_egress.Forwarding_Rule_So-Sk.Egress_SN_Sk-So ") || instruction.contains(" INV.supports.Supporting_MC.NC_Supported_by_MC ") || instruction.contains(" INV.set_ingress.Forwarding_Rule_MC_Sk.Ingress_MC_Sk ") || instruction.contains(" INV.componentOf.Layer_Processor_Function_Source.Layer_Processor_Source_Input ") || instruction.contains(" componentOf.Unidirectional_Matrix.Matrix_Input ") || instruction.contains(" componentOf.Bi_Path_CFTE.Sink_CFTE_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_AP.Source_AP_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_LPF-FEP.Source_LPF-FEP_Bi_Component ") || instruction.contains(" INV.set_egress.Forwarding_Rule_MC_So.Egress_MC_So ") || instruction.contains(" INV.componentOf.Termination_Source.Termination_Source_Process ") || instruction.contains(" supports.Supporting_LC.NC_Supported_by_LC ") || instruction.contains(" componentOf.Path_Bidirectional_Matrix.So_Matrix_Bi_Component ") || instruction.contains(" INV.componentOf.Adaptation_Sink.Adaptation_Sink_Input ") || instruction.contains(" INV.is_defined_by.Forwarding_Rule_So_SN.Forwarding_Function_CFTE_So ") || instruction.contains(" componentOf.Bidirectional_PM-FEP.Sink_PM-FEP_Bi_Component ") || instruction.contains(" componentOf.Path_Bidirectional_Matrix.Sk_Matrix_Bi_Component ") || instruction.contains(" INV.is_defined_by.Forwarding_Rule_So-Sk.Forwarding_Function_CFTE_So-Sk ") || instruction.contains(" INV.supports.Supporting_Access_Transport_Entity.Path_LC ") || instruction.contains(" INV.is_configured_by.So_MC_Forwarding.Forwarding_Function_So_M_Connected ") || instruction.contains(" INV.componentOf.Physical_Media_Layer_Network.Physical_Media_Layer_Termination ") || instruction.contains(" INV.componentOf.Bi_Path_LC.Path_LC_Bi_Component ") || instruction.contains(" is_defined_by.Int_MC_Forwarding.Forwarding_Rule_MC_Sk-So ") || instruction.contains(" INV.componentOf.Section_Layer_Network.Section_Layer_Termination ") || instruction.contains(" INV.componentOf.Path_Layer_Network.Path_Layer_Termination ") || instruction.contains(" componentOf.Topological_Layer.Access_Group ") || instruction.contains(" componentOf.Layer_Processor_Function_Source.Layer_Processor_Source_Process ") || instruction.contains(" componentOf.LC_Composed_Layer_Network.Link_Connection ") || instruction.contains(" INV.set_ingress.Fowarding_Rule_Sk_SN.Ingress_SN_Sk ") || instruction.contains(" INV.represents.Single_Equipment_Site.Single_Equipment_Site_Component ") || instruction.contains(" INV.is_defined_by.Fowarding_Rule_Sk_SN.Forwarding_Function_CFTE_Sk ") || instruction.contains(" componentOf.Termination_Source.Termination_Source_Input ") || instruction.contains(" componentOf.Matrix_Composed_Path_Layer.Component_Matrix ") || instruction.contains(" represents.Topological_M_Representation.Matrix ") || instruction.contains(" INV.componentOf.Bidirectional_SN-FEP.Sink_SN-FEP_Bi_Component ") || instruction.contains(" INV.is_configured_by.Path_LC_Forwarding.Forwarding_Function_LC_Connected ") || instruction.contains(" INV.is_defined_by.Forwarding_Rule_MC_So.Forwarding_Function_So_M_Connected ") || instruction.contains(" INV.componentOf.Layer_Processor_Function_Source.Layer_Processor_Source_Process ") || instruction.contains(" componentOf.Bidirectional_SN-FP.Source_SN-FP_Bi_Component ") || instruction.contains(" is_configured_by.Sk_CFTE_Forwarding.Forwarding_Function_CFTE_Sk ") || instruction.contains(" INV.componentOf.Bidirectional_LP-FP.Source_LP-FP_Bi_Component ") || instruction.contains(" componentOf.Layer_Processor_Function_Sink.Layer_Processor_Process ") || instruction.contains(" componentOf.Equipment.Input_Interface ") || instruction.contains(" INV.componentOf.Bi_Path_CFTE.Source_CFTE_Bi_Component ") || instruction.contains(" INV.componentOf.Termination_Sink.Termination_Sink_Output ") || instruction.contains(" componentOf.Bidirectional_PM_NC.Unidirectional_PM_NC_Bidirectional_Component ") || instruction.contains(" represents.Topological_SN_Representation.Subnetwork ") || instruction.contains(" componentOf.Equipment.Transport_Funtion_Equipment_Component ") || instruction.contains(" INV.componentOf.Composed_Topological_Layer.Connected_Relatable_TC ") || instruction.contains(" is_defined_by.Forwarding_Rule_Sk-So.Forwarding_Function_CFTE_Sk-So ") || instruction.contains(" componentOf.Layer_Processor_Function_Sink.Layer_Processor_Sink_Output ") || instruction.contains(" is_configured_by.Path_LC_Forwarding.Forwarding_Function_LC_Connected ") || instruction.contains(" INV.componentOf.Bi_Intermediate_MC.Intermediate_MC_Bi_Component ") || instruction.contains(" is_defined_by.Forwarding_Rule_MC_Sk.Sk_MC_Forwarding ") || instruction.contains(" componentOf.Termination_Sink.Termination_Sink_Input ") || instruction.contains(" is_configured_by.So_CFTE_Forwarding.Forwarding_Function_CFTE_So ") || instruction.contains(" INV.componentOf.Layer_Processor_Function_Sink.Layer_Processor_Sink_Input ") || instruction.contains(" INV.componentOf.Bidirectional_LP-FP.Sink_LP-FP_Bi_Component ") || instruction.contains(" INV.componentOf.Adaptation_Source.Adaptation_Source_Input ") || instruction.contains(" componentOf.Termination_Source.Termination_Source_Output ") || instruction.contains(" componentOf.Unidirectional_Matrix.Matrix_Output ") || instruction.contains(" componentOf.Bi_PM_LC.PM_LC_Bi_Component ") || instruction.contains(" componentOf.Bidirectional_M-FP.Source_M-FP_Bi_Component ") || instruction.contains(" INV.componentOf.Termination_Sink.Termination_Sink_Input ") || instruction.contains(" componentOf.Section_Layer_Network.Section_Layer_Termination ") || instruction.contains(" componentOf.Path_Layer_Network.Component_LPF ") || instruction.contains(" set_ingress.Forwarding_Rule_So-Sk.Ingress_SN_So-Sk ") || instruction.contains(" componentOf.Bidirectional_A-FP.Uni_A-FP_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_Sink-Source_Matrix.Uni_Sk-So_Matrix_Bi_Component ") || instruction.contains(" INV.componentOf.Bidirectional_SN-FP.Sink_SN-FP_Bi_Component ") || instruction.contains(" componentOf.Bidirectional_PM-FEP.Source_PM-FEP_Bi_Component ") || instruction.contains(" INV.componentOf.Unidirectional_Matrix.Matrix_Input ") || instruction.contains(" componentOf.Equipment.Output_Interface ") || instruction.contains(" is_configured_by.End_Forwarding.Forwarding_Function_CFTE_So-Sk ") || instruction.contains(" INV.componentOf.Bidirectional_PM_NC.Unidirectional_PM_NC_Bidirectional_Component ") || instruction.contains(" INV.componentOf.Adaptation_Sink.Adaptation_Sink_Output ") || instruction.contains(" componentOf.Layer_Processor_Function_Sink.Layer_Processor_Sink_Input ") || instruction.contains(" INV.componentOf.Adaptation_Source.Adaptation_Source_Process ") || instruction.contains(" set_egress.Forwarding_Rule_LC.Egress_LC ") || instruction.contains(" INV.set_ingress.Forwarding_Rule_So_SN.Ingress_SN_So ") || instruction.contains(" INV.componentOf.Bidirectional_Termination.Termination_Sk_Bidirectional_Component ") || instruction.contains(" set_ingress.Forwarding_Rule_MC_Sk.Ingress_MC_Sk ") || instruction.contains(" INV.componentOf.Subnetwork_Composed_Path_Layer.Component_Subnetwork ") || instruction.contains(" componentOf.Bidirectional_Adaptation.Adaptation_So_Bidirectional_Component ") || instruction.contains(" INV.componentOf.Bidirectional_Layer_Processor_Function.LPF_Sk_Bidirectional_Component ") || instruction.contains(" INV.componentOf.Termination_Sink.Termination_Sink_Process ") || instruction.contains(" componentOf.Bidirectional_Termination.Termination_So_Bidirectional_Component ") || instruction.contains(" supports.Supporting_MC.NC_Supported_by_MC ") || instruction.contains(" INV.componentOf.Single_Physical_Media.Physical_Media_Input ") || instruction.contains(" represents.Composed_AG.Co-located_Termination ") || instruction.contains(" INV.set_ingress.Forwarding_Rule_LC.Ingress_LC ") || instruction.contains(" componentOf.Bidirectional_A-FEP.Sink_A-FEP_Bi_Component ") || instruction.contains(" INV.componentOf.Equipment.Transport_Funtion_Equipment_Component ") || instruction.contains(" INV.componentOf.Bi_Path_MC.Sink_MC_Bi_Component ") || instruction.contains(" componentOf.Bi_Path_CFTE.Source_CFTE_Bi_Component ") || instruction.contains(" INV.componentOf.Layer_Processor_Function_Source.Layer_Processor_Source_Output ") || instruction.contains(" componentOf.Bidirectional_Sink-Source_Matrix.Uni_Sk-So_Matrix_Bi_Component ") || instruction.contains(" componentOf.Bi_Path_MC.Source_MC_Bi_Component ") || instruction.contains(" INV.set_egress.Forwarding_Rule_So_SN.Egress_SN_So ") || instruction.contains(" INV.set_egress.Forwarding_Rule_LC.Egress_LC ") || instruction.contains(" INV.componentOf.Unidirectional_Matrix.Matrix_Output ") || instruction.contains(" componentOf.Bidirectional_Termination.Termination_Sk_Bidirectional_Component ") || instruction.contains(" INV.set_ingress.Forwarding_Rule_So-Sk.Ingress_SN_So-Sk ") || instruction.contains(" INV.represents.Topological_Layer.Layer_Network ") || instruction.contains(" componentOf.Bidirectional_M-FP.Sink_M-FP_Bi_Component ") || instruction.contains(" INV.is_configured_by.Sk_CFTE_Forwarding.Forwarding_Function_CFTE_Sk ") || instruction.contains(" componentOf.Path_Layer_Network.Path_Layer_Termination ") || instruction.contains(" INV.binds_So_A-FEP ") || instruction.contains(" INV.has_equipment ") || instruction.contains(" INV.is_represented_by_So_SN-FP ") || instruction.contains(" INV.is_represented_by_Sk_M-FEP ") || instruction.contains(" Forwarding_End_CFTE ") || instruction.contains(" INV.T-PM_Source_Connection ") || instruction.contains(" Forwarding_Bidirectional_End_CFTE ") || instruction.contains(" INV.binds_So_A-FEP_to ") || instruction.contains(" binds_So_LPF-FEP ") || instruction.contains(" is_represented_by_A-FP ") || instruction.contains(" Forwarding_from_Source_CFTE ") || instruction.contains(" Forwarding_from_Sink_MC ") || instruction.contains(" INV.Forwarding_from_Uni_Access_Transport_Entity ") || instruction.contains(" INV.binds_Sk_A-FEP_from ") || instruction.contains(" T-PM_Sink_Connection ") || instruction.contains(" INV.path ") || instruction.contains(" INV.Forwarding_to_Intermediate_CFTE ") || instruction.contains(" Forwarding_from_Sink_CFTE ") || instruction.contains(" binds_Sk_M-FEP_to ") || instruction.contains(" INV.te_connected ") || instruction.contains(" INV.Forwarding_from_PM_LC ") || instruction.contains(" INV.is_connecting ") || instruction.contains(" Forwarding_to_PM_LC ") || instruction.contains(" Defined_Geographical_Element.longitude.minute ") || instruction.contains(" INV.binds_So_LPF-FP_to ") || instruction.contains(" binds_Sk_SN-FP_from ") || instruction.contains(" binds_A-FP_to ") || instruction.contains(" INV.binds_So_AP ") || instruction.contains(" INV.Forwarding_from_Intermediate_CFTE ") || instruction.contains(" Forwarding_from_Intermediate_CFTE ") || instruction.contains(" Defined_Geographical_Element.latitude.minute ") || instruction.contains(" A-A_Bidirectional_Connection ") || instruction.contains(" is_represented_by_Intermediate_MC ") || instruction.contains(" binds_So_PM-FEP_to ") || instruction.contains(" INV.L-A_Sink_Connection ") || instruction.contains(" T-M_Source_Connection ") || instruction.contains(" Forwarding_PM_LC ") || instruction.contains(" binds_Sk_M-FEP ") || instruction.contains(" INV.Forwarding_Bidirectional_Path_MC_FP ") || instruction.contains(" is_represented_by_Sk_SN-FEP ") || instruction.contains(" is_represented_by_Sk_M-FEP ") || instruction.contains(" INV.is_represented_by_Source_MC ") || instruction.contains(" isDefinedBy ") || instruction.contains(" INV.binding_is_represented_by ") || instruction.contains(" Forwarding_Bidirectional_Int_CFTE ") || instruction.contains(" has_forwarding ") || instruction.contains(" binds_Sk_LPF-FEP_to ") || instruction.contains(" INV.Forwarding_to_PM_LC ") || instruction.contains(" binds_Sk_LPF-FP_from ") || instruction.contains(" is_represented_by_So_A-FEP ") || instruction.contains(" INV.Forwarding_from_Intermediate_MC ") || instruction.contains(" INV.LA_-_Bidirectional_Connection ") || instruction.contains(" is_represented_by_Sk_AP ") || instruction.contains(" binds_So_LPF-FP_from ") || instruction.contains(" INV.binds_So_SN-FEP ") || instruction.contains(" INV.A-T_Sink_Connection ") || instruction.contains(" is_represented_by_Source_CFTE ") || instruction.contains(" is_represented_by_So_PM-FEP ") || instruction.contains(" INV.binds_Sk_AP_from ") || instruction.contains(" T-L_Source_Connection ") || instruction.contains(" Forwarding_to_Uni_Access_Transport_Entity ") || instruction.contains(" INV.T-A_Sink_Connection ") || instruction.contains(" INV.Forwarding_from_Sink_CFTE ") || instruction.contains(" L-A_Sink_Connection ") || instruction.contains(" Forwarding_from_End_CFTE ") || instruction.contains(" is_represented_by_Uni_PM_NC ") || instruction.contains(" INV.Sn-A_Source_Connection ") || instruction.contains(" INV.T-PM_Bidirectional_Connection ") || instruction.contains(" interface_binds ") || instruction.contains(" INV.has_forwarding ") || instruction.contains(" INV.Sn-A_Sink_Connection ") || instruction.contains(" INV.binds_So_L-FP_to ") || instruction.contains(" INV.binds ") || instruction.contains(" INV.Forwarding_Source_MC ") || instruction.contains(" binds_Sk_M-FP ") || instruction.contains(" INV.binds_Sk_L-FP_from ") || instruction.contains(" INV.binds_Sk_LPF-FEP_to ") || instruction.contains(" binds_So_PM-FEP_from ") || instruction.contains(" INV.M-A_Source_Connection ") || instruction.contains(" T-M_Sink_Connection ") || instruction.contains(" is_represented_by_So_M-FP ") || instruction.contains(" INV.binds_Sk_SN-FEP_from ") || instruction.contains(" INV.T-SN_Bidirectional_Connection ") || instruction.contains(" te_connected ") || instruction.contains(" INV.T-PM_Sink_Connection ") || instruction.contains(" INV.binds_PM_out_interface ") || instruction.contains(" Forwarding_Source_MC ") || instruction.contains(" is_represented_by_End_CFTE ") || instruction.contains(" binds_So_M-FP_from ") || instruction.contains(" is_represented_by_So_AP ") || instruction.contains(" Section-PM_client-server_layer_relationship ") || instruction.contains(" INV.Forwarding_Bidirectional_PM_FEP ") || instruction.contains(" INV.binds_Sk_M-FEP_to ") || instruction.contains(" INV.binds_Sk_M-FP_from ") || instruction.contains(" is_represented_by_Uni_Access_Transport_Entity ") || instruction.contains(" binds_So_LPF-FP_to ") || instruction.contains(" Forwarding_to_End_CFTE ") || instruction.contains(" INV.maps_input ") || instruction.contains(" binds_So_LPF-FEP_to ") || instruction.contains(" INV.is_represented_by_Path_LC ") || instruction.contains(" INV.binds_Sk_LPF-FEP_from ") || instruction.contains(" INV.Forwarding_Bidirectional_PM_NC ") || instruction.contains(" INV.Forwarding_to_Sink_CFTE ") || instruction.contains(" Forwarding_to_Uni_Path_NC ") || instruction.contains(" binds_Sk_AP_to ") || instruction.contains(" INV.interface_connects ") || instruction.contains(" is_represented_by_Sk_A-FEP ") || instruction.contains(" INV.is_represented_by_Sk_AP ") || instruction.contains(" Path-Path_client-server_layer_relationship ") || instruction.contains(" INV.interface_binds ") || instruction.contains(" INV.binds_So_PM-FEP ") || instruction.contains(" INV.Forwarding_Bidirectional_Int_CFTE ") || instruction.contains(" A-T_Sink_Connection ") || instruction.contains(" maps_input ") || instruction.contains(" INV.Forwarding_to_Uni_Access_Transport_Entity ") || instruction.contains(" binds_Sk_SN-FP_to ") || instruction.contains(" INV.binds_Sk_LPF-FP ") || instruction.contains(" INV.is_represented_by_Sink_MC ") || instruction.contains(" T-M_Bidirectional_Connection ") || instruction.contains(" INV.M-A_Bidirectional_Connection ") || instruction.contains(" is_represented_by_So_SN-FEP ") || instruction.contains(" M-A_Source_Connection ") || instruction.contains(" INV.is_represented_by_So_SN-FEP ") || instruction.contains(" INV.A-T_Bidirectional_Connection ") || instruction.contains(" Sn-A_Source_Connection ") || instruction.contains(" INV.is_represented_by_So_M-FEP ") || instruction.contains(" INV.binds_So_SN-FEP_from ") || instruction.contains(" is_represented_by_So_LP-FP ") || instruction.contains(" INV.T-A_Source_Connection ") || instruction.contains(" is_represented_by_Sk_LP-FP ") || instruction.contains(" INV.binds_Sk_PM-FEP_from ") || instruction.contains(" INV.Forwarding_Bidirectional_End_CFTE ") || instruction.contains(" Defined_Geographical_Element.longitude.degree ") || instruction.contains(" INV.binds_So_A-FEP_from ") || instruction.contains(" INV.binds_So_PM-FEP_to ") || instruction.contains(" INV.M-A_Sink_Connection ") || instruction.contains(" INV.Forwarding_Path_LC ") || instruction.contains(" INV.binds_Sk_SN-FEP_to ") || instruction.contains(" INV.Forwarding_End_CFTE ") || instruction.contains(" INV.Forwarding_from_End_CFTE ") || instruction.contains(" A-A_Connection ") || instruction.contains(" INV.binds_PM_in_interface ") || instruction.contains(" binds_PM_out_interface ") || instruction.contains(" binds_So_SN-FP_to ") || instruction.contains(" INV.binds_So_PM-FEP_from ") || instruction.contains(" INV.Forwarding_to_Sink_MC ") || instruction.contains(" Forwarding_Source_CFTE ") || instruction.contains(" INV.binds_A-FP ") || instruction.contains(" INV.is_represented_by_Source_CFTE ") || instruction.contains(" Forwarding_to_Intermediate_CFTE ") || instruction.contains(" binds_So_A-FEP_from ") || instruction.contains(" Forwarding_Int_CFTE ") || instruction.contains(" INV.binds_Sk_A-FEP_to ") || instruction.contains(" is_represented_by_So_LPF-FEP ") || instruction.contains(" Geographical_Element_With_Alias.location ") || instruction.contains(" INV.is_represented_by_Uni_Path_NC ") || instruction.contains(" Defined_Geographical_Element.longitude.second ") || instruction.contains(" INV.binds_Sk_M-FEP_from ") || instruction.contains(" binds_So_M-FEP ") || instruction.contains(" INV.binds_Sk_AP ") || instruction.contains(" INV.binds_So_LPF-FEP_to ") || instruction.contains(" INV.T-M_Bidirectional_Connection ") || instruction.contains(" binds_So_SN-FEP_from ") || instruction.contains(" binds_Sk_PM-FEP_to ") || instruction.contains(" INV.maps_output ") || instruction.contains(" binds_Sk_A-FEP_to ") || instruction.contains(" INV.T-L_Bidirectional_Connection ") || instruction.contains(" Forwarding_Bidirectional_Path_MC_FEP ") || instruction.contains(" INV.binds_So_LPF-FP_from ") || instruction.contains(" INV.is_represented_by_So_LPF-FEP ") || instruction.contains(" INV.binds_Sk_LPF-FP_to ") || instruction.contains(" binds_Sk_LPF-FEP ") || instruction.contains(" INV.site_connects ") || instruction.contains(" INV.binds_So_L-FP_from ") || instruction.contains(" maps_output ") || instruction.contains(" Forwarding_Sink_CFTE ") || instruction.contains(" INV.is_binding ") || instruction.contains(" INV.binds_So_SN-FP_from ") || instruction.contains(" INV.binds_Sk_AP_to ") || instruction.contains(" INV.binds_Sk_SN-FEP ") || instruction.contains(" INV.is_represented_by_Sk_LP-FP ") || instruction.contains(" binds_Sk_SN-FEP ") || instruction.contains(" is_represented_by_Sk_M-FP ") || instruction.contains(" binds_Sk_L-FP_from ") || instruction.contains(" Forwarding_Bidirectional_PM_NC ") || instruction.contains(" INV.binds_Sk_SN-FP ") || instruction.contains(" binds_Sk_M-FP_from ") || instruction.contains(" binds_Sk_AP_from ") || instruction.contains(" INV.binds_Sk_M-FEP ") || instruction.contains(" INV.Forwarding_Bidirectional_Int_MC ") || instruction.contains(" INV.Forwarding_Int_CFTE ") || instruction.contains(" INV.tf_connection ") || instruction.contains(" INV.Forwarding_from_Source_CFTE ") || instruction.contains(" binds_So_A-FEP_to ") || instruction.contains(" INV.is_represented_by_End_CFTE ") || instruction.contains(" T-SN_Bidirectional_Connection ") || instruction.contains(" Forwarding_to_Sink_MC ") || instruction.contains(" binds_Sk_A-FEP_from ") || instruction.contains(" binds_So_A-FEP ") || instruction.contains(" INV.Forwarding_Bidirectional_Path_CFTE_FP ") || instruction.contains(" T-A_Bidirectional_Connection ") || instruction.contains(" Forwarding_to_Path_LC ") || instruction.contains(" INV.is_represented_by_So_M-FP ") || instruction.contains(" INV.is_represented_by_Sink_CFTE ") || instruction.contains(" binds_Sk_M-FEP_from ") || instruction.contains(" binds_So_M-FEP_to ") || instruction.contains(" INV.Forwarding_to_Path_LC ") || instruction.contains(" T-PM_Bidirectional_Connection ") || instruction.contains(" Defined_Geographical_Element.latitude.degree ") || instruction.contains(" binds_Sk_LPF-FP ") || instruction.contains(" INV.T-L_Source_Connection ") || instruction.contains(" INV.binds_Sk_LPF-FP_from ") || instruction.contains(" INV.A-A_Connection ") || instruction.contains(" binds_So_LPF-FEP_from ") || instruction.contains(" INV.isDefinedBy ") || instruction.contains(" binds_Sk_SN-FEP_from ") || instruction.contains(" Forwarding_to_Source_MC ") || instruction.contains(" is_represented_by_So_L-FP ") || instruction.contains(" binds_Sk_L-FP_to ") || instruction.contains(" is_represented_by_Path_LC ") || instruction.contains(" INV.Forwarding_from_Path_LC ") || instruction.contains(" INV.binds_So_LPF-FEP_from ") || instruction.contains(" INV.binds_So_SN-FP_to ") || instruction.contains(" INV.connects ") || instruction.contains(" binds_So_AP_to ") || instruction.contains(" INV.Forwarding_from_Uni_Path_NC ") || instruction.contains(" INV.is_represented_by_Sk_M-FP ") || instruction.contains(" M-A_Sink_Connection ") || instruction.contains(" Defined_Geographical_Element.latitude.second ") || instruction.contains(" INV.binds_So_SN-FEP_to ") || instruction.contains(" client-server_layer_relationship ") || instruction.contains(" INV.Forwarding_Bidirectional_Path_CFTE_FEP ") || instruction.contains(" INV.is_represented_by_Sk_PM-FEP ") || instruction.contains(" INV.is_represented_by_Sk_SN-FP ") || instruction.contains(" is_connecting ") || instruction.contains(" INV.T-M_Source_Connection ") || instruction.contains(" Forwarding_Intermediate_MC ") || instruction.contains(" Forwarding_Bidirectional_Int_MC ") || instruction.contains(" Sn-A_Sink_Connection ") || instruction.contains(" INV.Forwarding_Source_CFTE ") || instruction.contains(" SN-A_Bidirectional_Connection ") || instruction.contains(" binds_Sk_SN-FP ") || instruction.contains(" Forwarding_Path_LC ") || instruction.contains(" is_represented_by_Sink_CFTE ") || instruction.contains(" Forwarding_to_Intermediate_MC ") || instruction.contains(" binds_So_SN-FP_from ") || instruction.contains(" is_represented_by_PM_LC ") || instruction.contains(" Forwarding_from_Uni_PM_NC ") || instruction.contains(" binds_A-FP_from ") || instruction.contains(" INV.binds_So_M-FEP_from ") || instruction.contains(" Forwarding_from_PM_LC ") || instruction.contains(" is_binding ") || instruction.contains(" is_represented_by_So_SN-FP ") || instruction.contains(" binds_Sk_PM-FEP_from ") || instruction.contains(" /L-A_Source_Connection ") || instruction.contains(" INV.Forwarding_to_Intermediate_MC ") || instruction.contains(" INV.Forwarding_Bidirectional_Access_Transport_Entity ") || instruction.contains(" binds_So_L-FP_from ") || instruction.contains(" Forwarding_Bidirectional_Path_NC ") || instruction.contains(" INV.Path-Section_client-server_layer_relationship ") || instruction.contains(" INV.A-A_Bidirectional_Connection ") || instruction.contains(" INV.is_represented_by_So_L-FP ") || instruction.contains(" INV.is_represented_by_Sk_A-FEP ") || instruction.contains(" site_connects ") || instruction.contains(" is_represented_by_So_M-FEP ") || instruction.contains(" binds_So_M-FEP_from ") || instruction.contains(" IT_is_represented_by ") || instruction.contains(" INV.Forwarding_to_Source_MC ") || instruction.contains(" path ") || instruction.contains(" binds_Sk_LPF-FP_to ") || instruction.contains(" binds_Sk_PM-FEP ") || instruction.contains(" binds_So_L-FP_to ") || instruction.contains(" INV.T-L_Sink_Connection ") || instruction.contains(" INV.binds_So_M-FP_from ") || instruction.contains(" INV.binds_Sk_PM-FEP_to ") || instruction.contains(" INV.Forwarding_Path_NC ") || instruction.contains(" INV.SN-A_Bidirectional_Connection ") || instruction.contains(" is_represented_by_Sink_MC ") || instruction.contains(" INV.is_represented_by_So_AP ") || instruction.contains(" INV.is_represented_by_Sk_L-FP ") || instruction.contains(" INV.Forwarding_from_Uni_PM_NC ") || instruction.contains(" INV.is_represented_by_So_PM-FEP ") || instruction.contains(" Forwarding_Bidirectional_Path_MC_FP ") || instruction.contains(" INV./L-A_Source_Connection ") || instruction.contains(" INV.binds_A-FP_to ") || instruction.contains(" Forwarding_Bidirectional_Path_LC ") || instruction.contains(" is_represented_by_Sk_SN-FP ") || instruction.contains(" INV.binds_So_AP_to ") || instruction.contains(" INV.Path-Path_client-server_layer_relationship ") || instruction.contains(" Forwarding_Path_NC ") || instruction.contains(" Forwarding_to_Source_CFTE ") || instruction.contains(" INV.binds_So_LPF-FP ") || instruction.contains(" INV.Forwarding_to_Source_CFTE ") || instruction.contains(" Forwarding_Bidirectional_Access_Transport_Entity ") || instruction.contains(" INV.T-SN_Source_Connection ") || instruction.contains(" binding_is_represented_by ") || instruction.contains(" binds_Sk_M-FP_to ") || instruction.contains(" Forwarding_Bidirectional_Path_CFTE_FP ") || instruction.contains(" binds_PM_in_interface ") || instruction.contains(" INV.T-A_Bidirectional_Connection ") || instruction.contains(" INV.Forwarding_to_End_CFTE ") || instruction.contains(" INV.Forwarding_PM_NC ") || instruction.contains(" INV.binds_So_M-FP ") || instruction.contains(" LA_-_Bidirectional_Connection ") || instruction.contains(" A-T_Bidirectional_Connection ") || instruction.contains(" A-T_Source_Connection ") || instruction.contains(" binds_Sk_LPF-FEP_from ") || instruction.contains(" is_represented_by_Uni_Path_NC ") || instruction.contains(" binds_So_SN-FP ") || instruction.contains(" Forwarding_Bidirectional_PM_FEP ") || instruction.contains(" Forwarding_PM_NC ") || instruction.contains(" is_represented_by_Source_MC ") || instruction.contains(" T-L_Sink_Connection ") || instruction.contains(" INV.binds_Sk_SN-FP_to ") || instruction.contains(" INV.binds_So_AP_from ") || instruction.contains(" Path-Section_client-server_layer_relationship ") || instruction.contains(" Forwarding_to_Sink_CFTE ") || instruction.contains(" M-A_Bidirectional_Connection ") || instruction.contains(" INV.Forwarding_Intermediate_MC ") || instruction.contains(" binds_So_AP_from ") || instruction.contains(" T-SN_Source_Connection ") || instruction.contains(" INV.binds_So_M-FEP_to ") || instruction.contains(" binds_So_LPF-FP ") || instruction.contains(" T-A_Sink_Connection ") || instruction.contains(" INV.binds_Sk_A-FEP ") || instruction.contains(" INV.Forwarding_Bidirectional_Path_MC_FEP ") || instruction.contains(" INV.Forwarding_Sink_MC ") || instruction.contains(" INV.Forwarding_PM_LC ") || instruction.contains(" is_represented_by_Sk_LPF-FEP ") || instruction.contains(" Forwarding_from_Uni_Access_Transport_Entity ") || instruction.contains(" Forwarding_from_Path_LC ") || instruction.contains(" INV.binds_So_M-FEP ") || instruction.contains(" T-A_Source_Connection ") || instruction.contains(" T-L_Bidirectional_Connection ") || instruction.contains(" binds_Sk_A-FEP ") || instruction.contains(" is_represented_by_Intermediate_CFTE ") || instruction.contains(" INV.is_represented_by_Uni_PM_NC ") || instruction.contains(" binds_Sk_AP ") || instruction.contains(" connects ") || instruction.contains(" INV.is_represented_by_Intermediate_MC ") || instruction.contains(" INV.binds_Sk_SN-FP_from ") || instruction.contains(" INV.T-SN_Sink_Connection ") || instruction.contains(" INV.Section-PM_client-server_layer_relationship ") || instruction.contains(" INV.Forwarding_Sink_CFTE ") || instruction.contains(" is_represented_by_Sk_L-FP ") || instruction.contains(" binds_Sk_SN-FEP_to ") || instruction.contains(" Forwarding_Unidirectional_Access_Transport_Entity ") || instruction.contains(" binds_A-FP ") || instruction.contains(" Forwarding_to_Uni_PM_NC ") || instruction.contains(" interface_connects ") || instruction.contains(" INV.binds_Sk_M-FP_to ") || instruction.contains(" Forwarding_from_Uni_Path_NC ") || instruction.contains(" INV.binds_So_SN-FP ") || instruction.contains(" INV.binds_So_LPF-FEP ") || instruction.contains(" INV.is_represented_by_Intermediate_CFTE ") || instruction.contains(" INV.Forwarding_from_Sink_MC ") || instruction.contains(" INV.binds_Sk_L-FP_to ") || instruction.contains(" INV.binds_Sk_LPF-FEP ") || instruction.contains(" INV.T-M_Sink_Connection ") || instruction.contains(" binds_So_SN-FEP ") || instruction.contains(" INV.binds_Sk_PM-FEP ") || instruction.contains(" INV.binds_Sk_M-FP ") || instruction.contains(" INV.is_represented_by_A-FP ") || instruction.contains(" INV.binds_So_M-FP_to ") || instruction.contains(" INV.is_represented_by_So_LP-FP ") || instruction.contains(" INV.binds_A-FP_from ") || instruction.contains(" INV.A-T_Source_Connection ") || instruction.contains(" INV.is_represented_by_PM_LC ") || instruction.contains(" INV.client-server_layer_relationship ") || instruction.contains(" Termination_Function.type ") || instruction.contains(" has_equipment ") || instruction.contains(" Forwarding_Bidirectional_Path_CFTE_FEP ") || instruction.contains(" INV.Forwarding_Bidirectional_Path_NC ") || instruction.contains(" INV.Forwarding_to_Uni_PM_NC ") || instruction.contains(" INV.is_represented_by_Sk_SN-FEP ") || instruction.contains(" T-SN_Sink_Connection ") || instruction.contains(" binds_So_AP ") || instruction.contains(" INV.Forwarding_Bidirectional_Path_LC ") || instruction.contains(" INV.Forwarding_from_Source_MC ") || instruction.contains(" INV.is_represented_by_So_A-FEP ") || instruction.contains(" INV.Forwarding_to_Uni_Path_NC ") || instruction.contains(" Forwarding_from_Source_MC ") || instruction.contains(" INV.IT_is_represented_by ") || instruction.contains(" INV.is_represented_by_Uni_Access_Transport_Entity ") || instruction.contains(" Forwarding_Sink_MC ") || instruction.contains(" binds_So_SN-FEP_to ") || instruction.contains(" binds_So_PM-FEP ") || instruction.contains(" binds ") || instruction.contains(" binds_So_M-FP ") || instruction.contains(" tf_connection ") || instruction.contains(" T-PM_Source_Connection ") || instruction.contains(" Forwarding_from_Intermediate_MC ") || instruction.contains(" INV.Forwarding_Unidirectional_Access_Transport_Entity ") || instruction.contains(" INV.is_represented_by_Sk_LPF-FEP ") || instruction.contains(" is_represented_by_Sk_PM-FEP ") || instruction.contains(" binds_So_M-FP_to "))
		{
			return true;
		} else
		{
			return false;
		}		
	}
	
	private static boolean isAtributeDeclaration(String instruction)
	{
		/* Data properties*/
		if(instruction.contains(".type:") || instruction.contains(".location:") || instruction.contains(".lat.deg:") || instruction.contains(".lat.min:") || instruction.contains(".lat.sec:") || instruction.contains(".lon.deg:") || instruction.contains(".lon.min:") || instruction.contains(".lon.sec:") )
		{
			return true;
		} else
		{
			return false;
		}		
	}
	
	private static boolean isDisjointWithDeclaration(String instruction)
	{
		/* Data properties*/
		if(instruction.contains("disjointWith"))
		{
			return true;
		} else
		{
			return false;
		}		
	}
	
	private static boolean isSameAsDeclaration(String instruction)
	{
		/* Data properties*/
		if(instruction.contains("sameAs"))
		{
			return true;
		} else
		{
			return false;
		}		
	}	

}
