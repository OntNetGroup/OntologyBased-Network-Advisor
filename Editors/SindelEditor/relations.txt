/* Initializing Relations cardinalities */
//componentOf cardinalities needs to be inverted!!!

/* Layer */
//Layer * client * Layer
hashRelation["client"+"layer"+"layer"] = createRelation(0,-1,0,-1);

//Layer * componentOf * Transport Function
hashRelation["component_of"+"layer"+"tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"so-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"sk-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"bi-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"so-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"sk-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"bi-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"so-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"sk-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"bi-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"uni-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"so-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"sk-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"bi-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"sn"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"layer"+"pm"] = createRelation(0,-1,0,-1);

/* Equipment */
//Output Interface 0..1 binds 0..1 Input Interface
hashRelation["binds"+"output_int"+"input_int"] = createRelation(0,1,0,1);

//Input Interface 0..1 connects 0..1 Input
hashRelation["connects"+"output_int"+"input_int"] = createRelation(0,1,0,1);

//Input Interface 0..1 maps 0..1 Input
hashRelation["maps"+"input_int"+"input"] = createRelation(0,1,0,1);

//Output Interface 0..1 maps 0..1 Output
hashRelation["maps"+"output_int"+"output"] = createRelation(0,1,0,1);

//Interface 0..1 binds 0..1 Port
hashRelation["binds"+"output_int"+"input"] = createRelation(0,1,0,1);
hashRelation["binds"+"output_int"+"output"] = createRelation(0,1,0,1);
hashRelation["binds"+"input_int"+"input"] = createRelation(0,1,0,1);
hashRelation["binds"+"input_int"+"output"] = createRelation(0,1,0,1);

//Equipment 0..1 componentOf * Interface
hashRelation["component_of"+"equip"+"input_int"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"output_int"] = createRelation(0,-1,0,1);

//Equipment * componentOf 0..1 Transport Function
hashRelation["component_of"+"equip"+"tf"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"so-tf"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"sk-tf"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"bi-tf"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"af"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"so-af"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"sk-af"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"bi-af"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"lpf"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"so-lpf"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"sk-lpf"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"bi-lpf"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"matrix"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"uni-matrix"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"so-matrix"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"sk-matrix"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"bi-matrix"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"sn"] = createRelation(0,-1,0,1);
hashRelation["component_of"+"equip"+"pm"] = createRelation(0,-1,0,1);

/* Site */
//Site 0..1 componentOf * Equipment
hashRelation["component_of"+"site"+"equip"] = createRelation(0,-1,0,1);

/* Transport Entity */
//

/* Reference Point */
//Bindable Element * binds * Bindable Element
hashRelation["component_of"+"tf"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"so-tf"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sk-tf"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"bi-tf"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"af"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"so-af"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sk-af"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"bi-af"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"lpf"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"so-lpf"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sk-lpf"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"bi-lpf"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"matrix"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"uni-matrix"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"so-matrix"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sk-matrix"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"bi-matrix"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sn"+"input"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"pm"+"input"] = createRelation(0,-1,0,-1);

hashRelation["component_of"+"input"+"tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"so-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"sk-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"bi-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"so-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"sk-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"bi-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"so-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"sk-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"bi-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"uni-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"so-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"sk-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"bi-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"sn"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"input"+"pm"] = createRelation(0,-1,0,-1);

hashRelation["component_of"+"tf"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"so-tf"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sk-tf"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"bi-tf"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"af"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"so-af"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sk-af"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"bi-af"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"lpf"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"so-lpf"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sk-lpf"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"bi-lpf"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"matrix"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"uni-matrix"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"so-matrix"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sk-matrix"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"bi-matrix"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"sn"+"output"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"pm"+"output"] = createRelation(0,-1,0,-1);

hashRelation["component_of"+"output"+"tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"so-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"sk-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"bi-tf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"so-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"sk-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"bi-af"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"so-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"sk-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"bi-lpf"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"uni-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"so-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"sk-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"bi-matrix"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"sn"] = createRelation(0,-1,0,-1);
hashRelation["component_of"+"output"+"pm"] = createRelation(0,-1,0,-1);

//TF 0..1 componentOf 0..2 TF
hashRelation["component_of"+"tf"+"tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"tf"+"so-tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"tf"+"sk-tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"tf"+"bi-tf"] = createRelation(0,2,0,1);

hashRelation["component_of"+"so-tf"+"tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-tf"+"so-tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-tf"+"sk-tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-tf"+"bi-tf"] = createRelation(0,2,0,1);

hashRelation["component_of"+"sk-tf"+"tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-tf"+"so-tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-tf"+"sk-tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-tf"+"bi-tf"] = createRelation(0,2,0,1);

hashRelation["component_of"+"bi-tf"+"tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-tf"+"so-tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-tf"+"sk-tf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-tf"+"bi-tf"] = createRelation(0,2,0,1);

//AF 0..1 componentOf 0..2 AF
hashRelation["component_of"+"af"+"af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"af"+"so-af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"af"+"sk-af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"af"+"bi-af"] = createRelation(0,2,0,1);

hashRelation["component_of"+"so-af"+"af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-af"+"so-af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-af"+"sk-af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-af"+"bi-af"] = createRelation(0,2,0,1);

hashRelation["component_of"+"sk-af"+"af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-af"+"so-af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-af"+"sk-af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-af"+"bi-af"] = createRelation(0,2,0,1);

hashRelation["component_of"+"bi-af"+"af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-af"+"so-af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-af"+"sk-af"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-af"+"bi-af"] = createRelation(0,2,0,1);

//LPF 0..1 componentOf 0..2 LPF
hashRelation["component_of"+"lpf"+"lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"lpf"+"so-lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"lpf"+"sk-lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"lpf"+"bi-lpf"] = createRelation(0,2,0,1);

hashRelation["component_of"+"so-lpf"+"lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-lpf"+"so-lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-lpf"+"sk-lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-lpf"+"bi-lpf"] = createRelation(0,2,0,1);

hashRelation["component_of"+"sk-lpf"+"lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-lpf"+"so-lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-lpf"+"sk-lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-lpf"+"bi-lpf"] = createRelation(0,2,0,1);

hashRelation["component_of"+"bi-lpf"+"lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-lpf"+"so-lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-lpf"+"sk-lpf"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-lpf"+"bi-lpf"] = createRelation(0,2,0,1);

//Matrix 0..1 componentOf 0..2 Matrix
hashRelation["component_of"+"matrix"+"matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"matrix"+"uni-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"matrix"+"bi-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"matrix"+"so-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"matrix"+"sk-matrix"] = createRelation(0,2,0,1);

hashRelation["component_of"+"uni-matrix"+"matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"uni-matrix"+"uni-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"uni-matrix"+"bi-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"uni-matrix"+"so-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"uni-matrix"+"sk-matrix"] = createRelation(0,2,0,1);

hashRelation["component_of"+"bi-matrix"+"matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-matrix"+"uni-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-matrix"+"bi-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-matrix"+"so-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"bi-matrix"+"sk-matrix"] = createRelation(0,2,0,1);

hashRelation["component_of"+"so-matrix"+"matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-matrix"+"uni-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-matrix"+"bi-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-matrix"+"so-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"so-matrix"+"sk-matrix"] = createRelation(0,2,0,1);

hashRelation["component_of"+"sk-matrix"+"matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-matrix"+"uni-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-matrix"+"bi-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-matrix"+"so-matrix"] = createRelation(0,2,0,1);
hashRelation["component_of"+"sk-matrix"+"sk-matrix"] = createRelation(0,2,0,1);
